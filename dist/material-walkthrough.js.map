{"version":3,"file":"material-walkthrough.js","sources":["../src/DOMUtils.js","../src/ScrollManager.js","../src/utils.js","../src/MaterialWalkthrough.js"],"sourcesContent":["/**\n * Utils used to manipulate DOM.\n */\nexport default class DOMUtils {\n\n  /**\n   * Query for a element in the Document with querySelector. If the target is already a HTMLElement, it bypass.\n   * @param {(string|HTMLElement)} target THe query in CSS selector syntax to match a Element from Document. Or it can be an element already, that will bypass.\n   * @returns {HTMLElement}\n   */\n  static get(target) {\n    if (typeof target === 'string') return document.querySelector(target);\n    return target;\n  }\n\n  /**\n   * Set a new style to an HTMLElement.\n   * @param {HTMLElement} element The target element to apply the style.\n   * @param properties\n   */\n  static setStyle(element, properties) {\n    Object.keys(properties).forEach(function (val) {\n      element.style[val] = properties[val];\n    });\n  }\n\n  /**\n   * Append a new element to an target using HTMLString.\n   * @param {HTMLElement} element The target element.\n   * @param {HTMLString|string} content A valid string based on HTMLString to append into the element.\n   */\n  static appendTo(element, content) {\n    const tmpElt = document.createElement('div');\n    tmpElt.innerHTML = content;\n    element.appendChild(tmpElt.children[0]);\n  }\n\n  /**\n   * Remove a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to remove.\n   */\n  static removeClass(element, className) {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Add a specific class from classList of a target element.\n   * @param {HTMLElement} element The target element.\n   * @param {string} className The class to add.\n   */\n  static addClass(element, className) {\n    element.classList.add(className);\n  }\n}\n","import dom from './DOMUtils';\n\n/**\n * Controls the state of scroll actions.\n * Thanks to @galambalazs.\n */\nexport default class ScrollManager {\n\n  /**\n   * A map object that list, enable/disable each keys that manipulate the scroll into the window.\n   * left: 37, up: 38, right: 39, down: 40,\n   * spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36\n   * @type {object}\n   */\n  static keys = {\n    37: 1,\n    38: 1,\n    39: 1,\n    40: 1,\n    32: 1,\n    33: 1,\n    34: 1\n  };\n\n  static preventDefault(e) {\n    e = e || window.event;\n    if (e.preventDefault)\n      e.preventDefault();\n    e.returnValue = false;\n  }\n\n  static preventDefaultForScrollKeys(e) {\n    if (ScrollManager.keys[e.keyCode]) {\n      ScrollManager.preventDefault(e);\n      return false;\n    }\n  }\n\n  /**\n   * Override the main listeners, disabling the scroll for each enabled key in `keys` object.\n   * Also, set `height: 100vh` and `overflow: hidden` in the `html` element, forcing the content size to match\n   * with the window.\n   */\n  static disable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '100vh',\n      'overflow': 'hidden'\n    });\n    const preventDefault = ScrollManager.preventDefault;\n    const preventDefaultForScrollKeys = ScrollManager.preventDefaultForScrollKeys;\n    if (window.addEventListener) // older FF\n      window.addEventListener('DOMMouseScroll', preventDefault, false);\n    window.onwheel = preventDefault; // modern standard\n    window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n    window.ontouchmove = preventDefault; // mobile\n    document.onkeydown = preventDefaultForScrollKeys;\n  }\n\n  /**\n   * Reset the main listeners, enabling the scroll.\n   * Also reset the html element styles assigned before in `disable` function.\n   */\n  static enable() {\n    dom.setStyle(dom.get('html'),{\n      'height': '',\n      'overflow': 'auto'\n    });\n    if (window.removeEventListener)\n      window.removeEventListener('DOMMouseScroll', ScrollManager.preventDefault, false);\n    window.onmousewheel = document.onmousewheel = null;\n    window.onwheel = null;\n    window.ontouchmove = null;\n    document.onkeydown = null;\n  }\n};\n","/**\n * Calculate brightness value by RGB or HEX color.\n * @param color (String) The color value in RGB or HEX (for example: #000000 || #000 || rgb(0,0,0) || rgba(0,0,0,0))\n * @returns (Number) The brightness value (dark) 0 ... 255 (light)\n */\nexport function brightnessByColor(color) {\n  var color = \"\" + color, isHEX = color.indexOf(\"#\") == 0, isRGB = color.indexOf(\"rgb\") == 0;\n  if (isHEX) {\n    var m = color.substr(1).match(color.length == 7 ? /(\\S{2})/g : /(\\S{1})/g);\n    if (m) var r = parseInt(m[0], 16), g = parseInt(m[1], 16), b = parseInt(m[2], 16);\n  }\n  if (isRGB) {\n    var m = color.match(/(\\d+){3}/g);\n    if (m) var r = m[0], g = m[1], b = m[2];\n  }\n  if (typeof r != \"undefined\") return ((r*299)+(g*587)+(b*114))/1000;\n}\n","/**\n * Copyright 2017 Esset Software LTD.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport dom from './DOMUtils';\nimport ScrollManager from './ScrollManager';\nimport { brightnessByColor } from './utils';\nimport './style.css';\n\n/**\n * A key-value object that configs the log level of _log function.\n * @private\n */\nconst _logenv = {\n  MSG: true,\n  WALK_CONTENT: true,\n  WALK_CONTENT_TOP: true,\n  WALK_LOCK: true,\n  WALK_SCROLL: true,\n  ALL: true\n};\n\n/**\n * Log with context based in _logenv.\n * @param {string} context The context to dispatch this log.\n * @param {string} message The verbose message.\n * @param {*} [attrs] Optional custom metadatas to display.\n * @private\n */\nfunction _log(context, message, ...attrs) {\n  if (!!_logenv[context] || _logenv.ALL) console.log(context + ': ' + message, ...attrs);\n}\n\n/**\n * A class that configures an walkpoint.\n * @typedef {object} WalkPoint\n * @property {string|HTMLElement} target A selector or a pure Element that the walk will focus;\n * @property {string} content A HTML code that will be inserted on the walk-content container;\n * @property {string} [color] A HEX or a RGB/RGBA color that will paint the walk. #2196F3 is default;\n * @property {string} [container] A selector for the container to scroll if not 'body';\n * @property {string} [acceptText] The text of the accept button of the walk;\n * @property {function} [onSet] A function that will be called when the walk content is setted;\n * @property {function} [onClose] A function that will be called when the walk is accepted;\n */\n\n/**\n * A material tour (eg Inbox from Google) for your site, enhancing the UX.\n * Basic usage:\n * ``` js\n * import MaterialWalkthrough from '@essetwide/material-walkthrough';\n *\n * MaterialWalkthrough.walk([\n *   {\n *     target: '#example1',\n *     content: 'My First Walkthrough!',\n *     acceptText: 'YEAH!'\n *   }\n * ]);\n * ```\n * @license Apache License 2.0.\n * @copyright Esset Software LTD.\n */\nexport default class MaterialWalkthrough {\n  /**\n   * Cache the current height size of the document.\n   * Calculated by `document.querySelector('html').offsetHeight` at `MaterialWalkthrough.to` method.\n   * @type {number}\n   */\n  static CURRENT_DOCUMENT_HEIGHT = 0;\n\n  /**\n   * Cache the original meta theme-color to be set back when MaterialWalkthrough finish.\n   * @type {string}\n   */\n  static ORIGINAL_THEME_COLOR = null;\n\n  /**\n   * Default color used if none is passed in the walkpoint.\n   * It need to be a valid HEX or RGB color because it will be useful on contrast calculations.\n   * @type {string}\n   */\n  static DEFAULT_COLOR = '#2196F3';\n\n  /**\n   * Default accept text if none is passed in the walkpoint.\n   * @type {string}\n   */\n  static DEFAULT_ACCEPT_TEXT = 'Ok';\n\n  /**\n   * The duration of any animation. It needs to be the same as defined at the style.\n   * Is used in some timeouts to wait a specific transition.\n   * @type {number}\n   */\n  static TRANSITION_DURATION = 500;\n\n  // @TODO: Auto apply DISABLE_HUGE_ANIMATIONS=true in mobile enviroment.\n  /**\n   * Disable animations such as walk's moving and opening/closing. Only Opacity animations is used.\n   * It is useful for mobile\n   * Default is false.\n   * @type {boolean}\n   */\n  static DISABLE_HUGE_ANIMATIONS = false;\n\n  /**\n   * Enable small wrapper of walkthrough.\n   * @type {boolean}\n   */\n  static FORCE_SMALL_BORDER = false;\n\n  /**\n   * Minimal size of focus hole.\n   * @type {boolean}\n   */\n  static MIN_SIZE = 60;\n\n  /**\n   * Focus hole margin.\n   * @type {number}\n   */\n  static GUTTER = 20;\n\n\n  /**\n   * Allow a quit button to be present to quit the tour\n   * Default is false.\n   * @type {boolean}\n   */\n  static ENABLE_QUIT = false;\n  static QUIT_TEMPLATE = '<a id=\\'walk-quit-button\\'>Quit tour</a>';\n  \n\n  /**\n   * Allow a stage counter to be present in the tour\n   * Default is false.\n   * @type {boolean}\n   */\n  static ENABLE_STAGE_COUNTER = false;\n  static STAGE_COUNTER_TEMPLATE = `\n    <div id=\\'walk-stage\\'>\n      <span id=\\'walk-stage-step\\'>Step</span>\n      <span id=\\'walk-stage-index\\'></span>\n      <span id=\\'walk-stage-of\\'>of</span>\n      <span id=\\'walk-stage-total\\'></span>\n    </div>`;\n\n  /**\n   * Main component template as ovverriden by consumer.\n   * @type {string}\n   */ \n  static ELEMENT_TEMPLATE = null;\n\n    static elementTemplate() {\n      return MaterialWalkthrough.ELEMENT_TEMPLATE ||\n      `<div id='walk-wrapper' class='${MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS ? 'animations-disabled' : ''} ${MaterialWalkthrough.FORCE_SMALL_BORDER ? 'small' : ''}'>\n        <div id='walk-content-wrapper'>\n          ${MaterialWalkthrough.ENABLE_STAGE_COUNTER ? MaterialWalkthrough.STAGE_COUNTER_TEMPLATE : '' }        \n          <div id='walk-content'></div>\n          <button id='walk-action'></button>\n          ${MaterialWalkthrough.ENABLE_QUIT ? MaterialWalkthrough.QUIT_TEMPLATE : '' }        \n        </div>\n      </div>`;  \n    };\n\n  /**\n   * Assigned to true after the component is settled into the document.\n   * @type {boolean}\n   */\n  static isInitialized = false;\n\n  /**\n   * Caches the wrapper element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _wrapper = null;\n\n  /**\n   * Caches the content text wrapper element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _contentWrapper = null;\n\n  /**\n   * Caches the content text element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _content = null;\n\n  /**\n   * Caches the action button element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _actionButton = null;\n\n  /**\n   * Caches the stage_counter wrapper element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _stageCounterWrapper = null;\n\n  /**\n   * Caches the quit button element.\n   * @type {HTMLElement}\n   * @private\n   */\n  static _quitButton = null;\n\n  /**\n   * Contains the current walkthrough configuration.\n   * @type {{\n   *   updateHandler: Function,\n   *   mutationObserver: MutationObserver,\n   *   points: Array<WalkPoint>,\n   *   currentIndex: Integer,\n   *   onCloseCallback: Function\n   * }}\n   * @private\n   */\n  static _instance = {\n    updateHandler: null,\n    mutationObserver: null,\n    points: null,\n    currentIndex: null,\n    onCloseCallback: null,\n    totalAccessibleStages: null,\n    currentAccesibleStage: null\n  };\n\n  /**\n   * Initialize the component in the document, appending `ELEMENT_TEMPLATE`,\n   * and initialize the element references (`_wrapper`, `_contentWrapper`, `_content`, `_actionButton`);\n   * @private\n   */\n  static _init() {\n    dom.appendTo(dom.get('body'), MaterialWalkthrough.elementTemplate());\n    MaterialWalkthrough._wrapper = dom.get('#walk-wrapper');\n    MaterialWalkthrough._contentWrapper = dom.get('#walk-content-wrapper');\n    MaterialWalkthrough._content = dom.get('#walk-content');\n    MaterialWalkthrough._actionButton = dom.get('#walk-action');\n    if(MaterialWalkthrough.ENABLE_STAGE_COUNTER) {\n      MaterialWalkthrough._stageCounterWrapper = dom.get('#walk-counter');\n    }\n    if(MaterialWalkthrough.ENABLE_QUIT) MaterialWalkthrough._quitButton = dom.get('#walk-quit-button');\n    \n\n    if (MaterialWalkthrough.DISABLE_HUGE_ANIMATIONS) dom.addClass(MaterialWalkthrough._wrapper, 'animations-disabled');\n    if (MaterialWalkthrough.FORCE_SMALL_BORDER) dom.addClass(MaterialWalkthrough._wrapper, 'small');\n\n    MaterialWalkthrough.isInitialized = true;\n  };\n\n  /**\n   * Check if a target exists and is visible in the page otherwise it should be discounted by the tour\n   */\n  static _targetIsHidden (target) {\n    if (!target) return true;\n    var targetDisplayStyle = target.currentStyle ? target.currentStyle.display : getComputedStyle(target, null).display;\n    \n    // in some cases the parent is hidden rather than the actual target\n    // as a result the normal checking for display='none' does not work\n    // the following check adds an extra check that picks up if a parent\n    // is indeed hidden\n    if (target && target.getClientRects().length === 0) { \n      return true\n    }\n    // Check the style is present and that it is not hidden!\n    return targetDisplayStyle && targetDisplayStyle === 'none';\n  }\n  \n  /***\n   * Set the opened walker to a target with the properties from walkPoint.\n   * @param {string|HTMLElement} target A query or a Element to target the walker\n   * @param {WalkPoint} walkPoint The properties for this walker\n   */\n  static _setWalker(walkPoint) {\n    let target = dom.get(walkPoint.target);\n    // Check the style is present and that it is not hidden!\n    if (MaterialWalkthrough._targetIsHidden (target)) {\n      _log('_setWalker', 'Target ' + walkPoint.target + ' not found or hidden. Skiping to next WalkPoint');\n      MaterialWalkthrough._next();\n      return;\n    }\n    if (MaterialWalkthrough.ENABLE_STAGE_COUNTER) {\n      // setup the stage counter if required\n      MaterialWalkthrough._instance.currentAccesibleStage++;\n      var node = document.querySelector('#walk-stage-step');\n      if (node) node.textContent = MaterialWalkthrough._instance.currentAccesibleStage;\n      node = document.querySelector('#walk-stage-total');\n      if (node) node.textContent = MaterialWalkthrough._instance.totalAccessibleStages;\n      }\n      \n    _log('MSG', '-------------------------------------');\n    _log('MSG', 'Setting a walk to #' + target.id);\n    _log('WALK_SETUP', 'Properties:\\n' + JSON.stringify(walkPoint, null, 2));\n\n    MaterialWalkthrough._setupListeners(target, walkPoint.container, walkPoint.onClose, walkPoint);\n\n    MaterialWalkthrough._locateTarget(target, walkPoint.container, () => {\n      MaterialWalkthrough._setProperties(walkPoint.content, walkPoint.color, walkPoint.acceptText);\n      dom.setStyle(MaterialWalkthrough._wrapper, {display: 'block'});\n\n      MaterialWalkthrough._renderFrame(target, walkPoint, () => {\n        dom.addClass(MaterialWalkthrough._wrapper, 'opened');\n        MaterialWalkthrough._renderContent(target, () => {\n          dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n        });\n\n        // Little XGH\n        MaterialWalkthrough._renderContent(target, () => {\n          dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n        });\n      });\n    });\n\n    _log('MSG', 'Walk created. Calling onSet() (if exists)');\n    if (!!walkPoint.onSet) walkPoint.onSet();\n  }\n\n  /***\n   * Create the function that updates the walker to a target\n   * @param {HTMLElement} target  The target to set the update function\n   * @returns {function} Update handler to call in the listeners\n   */\n  static _createUpdateHandler(target, container, walkPoint) {\n    _log('WALK_UPDATE', 'Creating UpdateHandler for #' + target.id);\n\n    const updateHandler = () => {\n      _log('MSG', 'Updating and rendering');\n      MaterialWalkthrough._locateTarget(target, container, () => {\n        MaterialWalkthrough._renderFrame(target, walkPoint, () => {\n          MaterialWalkthrough._renderContent(target);\n        });\n      });\n    };\n    updateHandler.toString = () => {\n      return 'updateHandler -> #' + target.id;\n    };\n    return updateHandler;\n  }\n\n  /***\n   * Check if is at the end and finish it or move to the next WalkPoint\n   */\n  static _next(){\n    const hasNext = !!MaterialWalkthrough._instance.points && !!MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex + 1];\n      if (hasNext) {\n        MaterialWalkthrough._instance.currentIndex++;\n        MaterialWalkthrough._setWalker(\n          MaterialWalkthrough._instance.points[MaterialWalkthrough._instance.currentIndex]\n        );\n      } else {\n        MaterialWalkthrough.closeWalker();\n      }\n  }\n\n  /***\n   * Setup the update listeners (onResize, MutationObserver) and the close callback.\n   * @param {HTMLElement} target The target to set the listeners\n   * @param {function} onClose Close callback\n   */\n  static _setupListeners(target, container, onClose, walkPoint) {\n    if (!!MaterialWalkthrough._instance.updateHandler) MaterialWalkthrough._flushListeners();\n    MaterialWalkthrough._instance.updateHandler = MaterialWalkthrough._createUpdateHandler(target, container, walkPoint);\n\n    window.addEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n    MaterialWalkthrough._instance.mutationObserver = new MutationObserver(MaterialWalkthrough._instance.updateHandler);\n    MaterialWalkthrough._instance.mutationObserver.observe(document.body, {childList: true, subtree: true});\n\n    MaterialWalkthrough._actionButton.addEventListener('click', function actionCallback() {\n      if (!!onClose) onClose();\n\n      // Responsive metrics (According the style.css)\n      dom.addClass(MaterialWalkthrough._wrapper, 'transiting');\n\n      setTimeout(() => {\n        MaterialWalkthrough._next();\n      }, MaterialWalkthrough.TRANSITION_DURATION);\n\n      MaterialWalkthrough._actionButton.removeEventListener('click', actionCallback);\n    });\n  }\n\n  /***\n   * Clean the listeners with the actual updateHandler\n   */\n  static _flushListeners() {\n    _log('WALK_UPDATER', 'Flushing handlers\\n' + MaterialWalkthrough._instance.updateHandler);\n    if (!!MaterialWalkthrough._instance.mutationObserver) MaterialWalkthrough._instance.mutationObserver.disconnect();\n    MaterialWalkthrough._instance.mutationObserver = null;\n    window.removeEventListener('resize', MaterialWalkthrough._instance.updateHandler);\n  }\n\n  /***\n   * Set the properties for the walk.\n   * @param {string} content The content that will be displayed in the walk\n   * @param {string} color A HEX or a RGB/RGBA valid color\n   * @param {string} acceptText The text that will be displayed in the accept button\n   */\n  static _setProperties(content, color, acceptText) {\n    const borderColor = !!color ? color : MaterialWalkthrough.DEFAULT_COLOR;\n    console.log(brightnessByColor(borderColor));\n\n    const brightness = brightnessByColor(borderColor);\n    if (\n      // BLACK CONTRAST\n      (brightness == 127.916 // LIGHT BLUE 500\n      || brightness == 122.966 // CYAN 600\n      || brightness == 126.36 // TEAL 400\n      || brightness == 134.569) // GREEN 500\n      // WHITE CONTRAST\n      || ((brightness != 145.93 // PINK 300\n      || brightness != 139.462 // PURPLE 300\n      || brightness != 142.449) // BROWN 300\n        && brightness > 138.872) // P&B AVR\n    )\n      dom.addClass(MaterialWalkthrough._wrapper, 'dark');\n    else dom.removeClass(MaterialWalkthrough._wrapper, 'dark');\n\n    dom.setStyle(MaterialWalkthrough._wrapper, { borderColor });\n    MaterialWalkthrough._content.innerHTML = content;\n    MaterialWalkthrough._actionButton.innerHTML = acceptText || MaterialWalkthrough.DEFAULT_ACCEPT_TEXT;\n    if (!MaterialWalkthrough.FORCE_SMALL_BORDER) {\n      const themeColor = dom.get('meta[name=\"theme-color\"]');\n      if (themeColor) themeColor.setAttribute('content', borderColor);\n    }\n  }\n\n  /***\n   * Sum the offsetTop and offsetLeft of all parents\n   * @param {HTMLElement} target\n   */\n  static _position(target) {\n    let left = 0;\n    let top = 0;\n    do {\n      left += target.offsetLeft;\n      top += target.offsetTop;\n      target = target.offsetParent;\n    } while (target !== null);\n    return { left, top };\n  }\n\n  // @TODO: Animate the scroll.\n  /***\n   * Centralize the scroll to a target.\n   * @param {HTMLElement} target\n   * @param {function} locateCallback\n   */\n  static _locateTarget(target, containerSelector, locateCallback) {\n    const container = document.querySelector(containerSelector || 'body');\n    let containerClientHeight, containerScrollHeight, containerScrollTop;\n\n    if (container.tagName.toLowerCase() === 'body') {\n      // the window/body work differently to inner elements\n      // see https://javascript.info/size-and-scroll-window\n      containerClientHeight = document.documentElement.clientHeight;\n      containerScrollHeight = Math.max(\n        document.body.scrollHeight, document.documentElement.scrollHeight,\n        document.body.offsetHeight, document.documentElement.offsetHeight,\n        document.body.clientHeight, document.documentElement.clientHeight\n      );\n      containerScrollTop = window.pageYOffset;\n    } else {\n      containerClientHeight = container.clientHeight;\n      containerScrollHeight = container.scrollHeight;\n      containerScrollTop = container.scrollTop;\n    }\n    const containerTop = MaterialWalkthrough._position(container).top;\n    const maxScrollValue = containerScrollHeight - containerClientHeight;\n\n    const { top } = MaterialWalkthrough._position(target);\n    const { height } = target.getClientRects()[0];\n\n    const YCoordinate = top - containerTop - (containerClientHeight / 2) + height / 2;\n    const secureYCoordinate = Math.min(YCoordinate, maxScrollValue);\n\n    _log('WALK_LOCK', 'Moving Scroll to:', secureYCoordinate);\n    _log('WALK_LOCK', containerSelector + ' clientHeight:', containerClientHeight);\n\n    if (container.tagName.toLowerCase() === 'body') {\n      window.scrollTo(0, secureYCoordinate);\n    } else {\n      container.scrollTop = secureYCoordinate;\n    }\n\n    // TODO: After the animation, timeout on callback\n    if (locateCallback) locateCallback();\n  }\n\n  /**\n   * Move the walk to a target.\n   * @param {HTMLElement} target\n   * @param {function} renderCallback\n   * @private\n   */\n  static _renderFrame(target, walkPoint, renderCallback) {\n    // Use the client bounding rect that includes css translation etc.\n    const { height, width, left, top } = target.getBoundingClientRect();\n    // Adjust the top to be relative to the document\n    const docTop = top + window.pageYOffset;\n\n    let holeSize = height > width ? height : width; // Catch the biggest measure\n    // Adjust with default min measure if it not higher than it\n    if (holeSize < MaterialWalkthrough.MIN_SIZE) holeSize = MaterialWalkthrough.MIN_SIZE;\n    if (walkPoint && walkPoint.holeSize) holeSize = walkPoint.holeSize;\n    _log('WALK_LOCK', 'Walk hole size ' + holeSize + 'px');\n    _log('WALK_LOCK', 'Gutter is ' + MaterialWalkthrough.GUTTER);\n\n    const positions = {\n      height: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n      width: (holeSize + MaterialWalkthrough.GUTTER) + 'px',\n\n      marginLeft: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n      marginTop: -((holeSize + MaterialWalkthrough.GUTTER) / 2) + 'px',\n\n      left: (left + (width / 2)) + 'px',\n      top: (docTop + (height / 2)) + 'px',\n    };\n    dom.setStyle(MaterialWalkthrough._wrapper, positions);\n    _log('WALK_LOCK', 'Positioning \\n' + JSON.stringify(positions, 2));\n\n    setTimeout(function () {\n      renderCallback();\n    }, MaterialWalkthrough.TRANSITION_DURATION / 2);\n  }\n\n  /**\n   * Calculates the positions and render the content in the screen based in the space available around a target.\n   * @param {HTMLElement} target\n   * @param {function} renderCallback\n   * @private\n   */\n  static _renderContent(target, renderCallback) {\n    const position = MaterialWalkthrough._wrapper.getBoundingClientRect(); // target.getBoundingClientRect(); // target.getClientRects()[0];\n\n    const itCanBeRenderedInRight =\n      position.left + (MaterialWalkthrough._wrapper.offsetWidth - MaterialWalkthrough.GUTTER)\n      + MaterialWalkthrough._contentWrapper.offsetWidth < window.innerWidth;\n    const itCanBeRenderedInLeft = (position.left + MaterialWalkthrough.GUTTER) - MaterialWalkthrough._contentWrapper.offsetWidth > 0;\n\n    const itCanBeRenderedInTop =\n      position.top\n      - MaterialWalkthrough._contentWrapper.offsetHeight > 0;\n    const itCanBeRenderedInBottom =\n      position.top\n      + MaterialWalkthrough._contentWrapper.offsetHeight + MaterialWalkthrough._wrapper.offsetHeight\n      < window.innerHeight;\n\n    _log('WALK_CONTENT', 'itCanBeRenderedInRight: ' + itCanBeRenderedInRight);\n    _log('WALK_CONTENT', 'itCanBeRenderedInLeft: ' + itCanBeRenderedInLeft);\n    _log('WALK_CONTENT', 'itCanBeRenderedInTop: ' + itCanBeRenderedInTop);\n    _log('WALK_CONTENT', 'itCanBeRenderedInBottom: ' + itCanBeRenderedInBottom);\n\n    let left = '100%';\n    let top = '100%';\n    let marginTop = 0;\n    let marginLeft = 0;\n    let textAlign = 'left';\n\n    if (!itCanBeRenderedInRight) {\n      left = itCanBeRenderedInLeft ? '-' + MaterialWalkthrough._contentWrapper.offsetWidth + 'px' : 'calc(50% - 100px)';\n      textAlign = itCanBeRenderedInLeft ? 'right' : 'center';\n      marginTop = itCanBeRenderedInLeft ? 0 : itCanBeRenderedInBottom ? '10px' : '-10px';\n    }\n    if (!itCanBeRenderedInBottom) {\n      top = itCanBeRenderedInTop ? '-' + MaterialWalkthrough._contentWrapper.offsetHeight + 'px' : MaterialWalkthrough._wrapper.offsetHeight / 2 - MaterialWalkthrough._contentWrapper.offsetHeight / 2 + 'px';\n      marginLeft = itCanBeRenderedInTop ? 0 : !itCanBeRenderedInRight ? '-10px' : '10px';\n    }\n    dom.setStyle(MaterialWalkthrough._contentWrapper, { left: left, top: top, textAlign: textAlign, marginTop: marginTop, marginLeft: marginLeft });\n\n    // now we have placed it lets see if its content wrapper is overhanging the screen and if so simply centre it\n    // but assume a margin\n    let cwPosition = MaterialWalkthrough._contentWrapper.getBoundingClientRect();\n    let margin = 20\n    if(cwPosition.left < margin || cwPosition.left + cwPosition.width + margin > window.innerWidth) {\n      _log('WALK_CONTENT', 'Text would overhang to left or right: will centre ' )\n      let newAbsoluteLeftPos = ((window.innerWidth / 2) - (cwPosition.width / 2))\n      // calc how much we need to move the current x to the new x to acheive the newAbsoluteLeftPos\n      let leftShift\n      if (cwPosition.left < margin) { // shift it right \n        leftShift = newAbsoluteLeftPos - cwPosition.left\n      } else { //shift it left\n        leftShift =  - (cwPosition.left - newAbsoluteLeftPos) \n      }\n      marginLeft = marginLeft + leftShift + 'px'\n      //debugger\n      dom.setStyle(MaterialWalkthrough._contentWrapper, { 'margin-left': marginLeft});\n    }\n\n    if (renderCallback) renderCallback();\n  }\n\n  /***\n   * Do a walkthrough to a set of walkpoints.\n   * @param {Array<WalkPoint>} walkPoints A list of each walkpoint to move the walktrough.\n   * @param {function} callback Callback called when the walkthrough is closed.\n   */\n  static walk(walkPoints, callback) {\n    MaterialWalkthrough._instance.points = walkPoints;\n    MaterialWalkthrough._instance.currentIndex = 0;\n    MaterialWalkthrough._instance.currentAccesibleStage = 0;\n    MaterialWalkthrough._instance.onCloseCallback = callback;\n    if (document.querySelector('meta[name=\"theme-color\"]'))\n      MaterialWalkthrough.ORIGINAL_THEME_COLOR = document.querySelector('meta[name=\"theme-color\"]').getAttribute('content');\n    else {\n      MaterialWalkthrough.ORIGINAL_THEME_COLOR = null;\n      var meta = document.createElement('meta');\n      meta.name = \"theme-color\";\n      meta.content = \"\";\n      document.querySelector('head').appendChild(meta);\n    }\n    if (MaterialWalkthrough.ENABLE_STAGE_COUNTER) MaterialWalkthrough._setupStageCounter();\n    MaterialWalkthrough.to(walkPoints[0]);\n  };\n\n  // walk the stages to see which ones are actually accessible \n  // so the stage counter can show valid stages\n  static _setupStageCounter () {\n    _log('WALK_CONTENT', ' walking content to count valid stages...');\n    MaterialWalkthrough._instance.totalAccessibleStages = 0\n    let i = 0;\n    for (i = 0; i < MaterialWalkthrough._instance.points.length; i++) { \n      let target = MaterialWalkthrough._instance.points[i].target\n      _log('WALK_CONTENT', `checking ${target}`);\n      if (!MaterialWalkthrough._targetIsHidden(dom.get(target))) {\n        _log('WALK_CONTENT', `target is present ${target}`);\n        MaterialWalkthrough._instance.totalAccessibleStages++;\n      }\n    }\n  }\n\n  /***\n   * Open the walkthrough to a single walkpoint.\n   * @param {WalkPoint} walkPoint The configuration of the walkpoint\n   */\n  static to(walkPoint) {\n    MaterialWalkthrough.CURRENT_DOCUMENT_HEIGHT = document.querySelector('html').offsetHeight;\n    ScrollManager.disable();\n    if (!MaterialWalkthrough.isInitialized) MaterialWalkthrough._init();\n\n    // setup the stage counter if required\n    if (MaterialWalkthrough.ENABLE_STAGE_COUNTER) {\n      let node = document.querySelector('#walk-stage-step')\n      if (node)node.textContent = MaterialWalkthrough._instance.currentAccesibleStage\n      node = document.querySelector('#walk-stage-total')\n      if (node)node.textContent = MaterialWalkthrough._instance.totalAccessibleStages\n    }\n\n    dom.removeClass(MaterialWalkthrough._wrapper, 'closed');\n    MaterialWalkthrough._setWalker(walkPoint);\n  }\n\n  /***\n   * Close the walker and flush its Listeners.\n   */\n  static closeWalker() {\n    _log('MSG', 'Closing Walker');\n\n    // these 4 lines used to be in the next method when reaching the end of the tour\n    // but putting them in here so they get mopped up when the tour is quit\n    MaterialWalkthrough._instance.currentIndex = 0;\n    MaterialWalkthrough._instance.currentAccesibleStage = 0;\n    MaterialWalkthrough._instance.points = null;\n    if (MaterialWalkthrough._instance.onCloseCallback) MaterialWalkthrough._instance.onCloseCallback();\n    MaterialWalkthrough._instance.onCloseCallback = null;\n    // plus clear any event listeners from the action button that may have not been cleared up if the quit button was hit\n    // we do this by replacing the button with a clone which will not have listeneners\n    let new_button = MaterialWalkthrough._actionButton.cloneNode(true);\n    MaterialWalkthrough._actionButton.parentNode.replaceChild(new_button, MaterialWalkthrough._actionButton);\n    MaterialWalkthrough._actionButton = new_button\n\n    MaterialWalkthrough._flushListeners();\n    ScrollManager.enable();\n\n    const themeColor = dom.get('meta[name=\"theme-color\"]');\n    if (themeColor) themeColor.setAttribute('content', MaterialWalkthrough.ORIGINAL_THEME_COLOR);\n\n    // This will centralize the walk while it animate the hole opening with 1000px size.\n    dom.setStyle(MaterialWalkthrough._wrapper, { marginTop: '-500px', marginLeft: '-500px' });\n    dom.addClass(MaterialWalkthrough._wrapper, 'closed');\n    setTimeout(() => {\n      dom.setStyle(MaterialWalkthrough._wrapper, {display: 'none'});\n      dom.removeClass(MaterialWalkthrough._wrapper, 'opened');\n      dom.removeClass(MaterialWalkthrough._wrapper, 'transiting');\n      _log('MSG', 'Walker Closed!');\n    }, MaterialWalkthrough.TRANSITION_DURATION);\n  }\n}\n"],"names":["DOMUtils","target","document","querySelector","element","properties","keys","forEach","val","style","content","tmpElt","createElement","innerHTML","appendChild","children","className","classList","remove","add","ScrollManager","e","window","event","preventDefault","returnValue","keyCode","setStyle","dom","get","preventDefaultForScrollKeys","addEventListener","onwheel","onmousewheel","ontouchmove","onkeydown","removeEventListener","brightnessByColor","color","isHEX","indexOf","isRGB","m","substr","match","length","r","parseInt","g","b","_logenv","_log","context","message","attrs","ALL","log","MaterialWalkthrough","ELEMENT_TEMPLATE","DISABLE_HUGE_ANIMATIONS","FORCE_SMALL_BORDER","ENABLE_STAGE_COUNTER","STAGE_COUNTER_TEMPLATE","ENABLE_QUIT","QUIT_TEMPLATE","appendTo","elementTemplate","_wrapper","_contentWrapper","_content","_actionButton","_stageCounterWrapper","_quitButton","addClass","isInitialized","targetDisplayStyle","currentStyle","display","getComputedStyle","getClientRects","walkPoint","_targetIsHidden","_next","_instance","currentAccesibleStage","node","textContent","totalAccessibleStages","id","JSON","stringify","_setupListeners","container","onClose","_locateTarget","_setProperties","acceptText","_renderFrame","_renderContent","removeClass","onSet","updateHandler","toString","hasNext","points","currentIndex","_setWalker","closeWalker","_flushListeners","_createUpdateHandler","mutationObserver","MutationObserver","observe","body","childList","subtree","actionCallback","TRANSITION_DURATION","disconnect","borderColor","DEFAULT_COLOR","brightness","DEFAULT_ACCEPT_TEXT","themeColor","setAttribute","left","top","offsetLeft","offsetTop","offsetParent","containerSelector","locateCallback","containerClientHeight","containerScrollHeight","tagName","toLowerCase","documentElement","clientHeight","Math","max","scrollHeight","offsetHeight","containerTop","_position","maxScrollValue","height","YCoordinate","secureYCoordinate","min","scrollTo","scrollTop","renderCallback","getBoundingClientRect","width","docTop","pageYOffset","holeSize","MIN_SIZE","GUTTER","positions","position","itCanBeRenderedInRight","offsetWidth","innerWidth","itCanBeRenderedInLeft","itCanBeRenderedInTop","itCanBeRenderedInBottom","innerHeight","marginTop","marginLeft","textAlign","cwPosition","margin","newAbsoluteLeftPos","leftShift","walkPoints","callback","onCloseCallback","ORIGINAL_THEME_COLOR","getAttribute","meta","name","_setupStageCounter","to","i","CURRENT_DOCUMENT_HEIGHT","disable","_init","new_button","cloneNode","parentNode","replaceChild","enable"],"mappings":"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"}